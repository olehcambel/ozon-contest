package main

import (
	"bufio"
	"io/ioutil"
	"log"
	"os"
	"strconv"
)

const (
	inputPath  = "input.txt"
	outputPath = "output.txt"
)

func comparePair() error {
	file, err := os.Open(inputPath)
	if err != nil {
		return err
	}
	defer file.Close()

	scanner := bufio.NewScanner(file)
	scanner.Split(bufio.ScanWords)

	var target int

	if scanner.Scan() {
		target, err = strconv.Atoi(scanner.Text())
		if err != nil {
			return err
		}
	}

	collect := make(map[int]int)

	for scanner.Scan() {
		x, err := strconv.Atoi(scanner.Text())
		if err != nil {
			return err
		}

		// no sense to go further if value is bigger than target (only positive)
		if x > target {
			continue
		}

		collect[x]++
	}

	if err := scanner.Err(); err != nil {
		return err
	}

	res := checkSequence(collect, target)
	err = ioutil.WriteFile(outputPath, []byte(b2s(res)), 0644)

	return err
}

func checkSequence(collect map[int]int, target int) bool {
	for k, v := range collect {
		if _, ok := collect[target-k]; ok && (v > 1 || k != target-k) {
			return true
		}
	}
	return false
}

func b2s(t bool) string {
	if t {
		return "1"
	}

	return "0"
}

func main() {
	err := comparePair()
	if err != nil {
		log.Fatal(err)
	}
}
